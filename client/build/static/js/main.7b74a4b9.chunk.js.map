{"version":3,"sources":["images/PullReqIcon.svg","components/navigation/Navbar.js","components/TinderCards.js","components/navigation/buttons/SendMessageDialog.js","components/navigation/buttons/SwipeButtons.js","components/chat/Chat.js","components/chat/Chats.js","components/chat/ChatScreen.js","components/chat/MessagePost.js","components/chat/ChatForm.js","components/Signup.js","components/Login.js","components/navigation/Menu.js","services/auth.js","App.js","index.js","images/PullReqGreen.svg"],"names":["module","exports","Navbar","backButton","user","menuIsOpen","setMenuIsOpen","history","useHistory","location","useLocation","className","icon","IconButton","onClick","e","replace","path","fontSize","to","src","Logo","alt","width","style","visibility","pathname","TinderCards","this","props","loadNextPage","setBackButton","prevProps","prevState","labels","length","message","map","label","key","_id","preventSwipe","onCardLeftScreen","handleCardLeftScreen","backgroundImage","image","gitPullRequest","repo_id","repo","formatRelative","subDays","Date","parse","updated_at","tag","Chip","name","color","backgroundColor","size","Breadcrumbs","aria-label","Link","owner","href","url","login","about","title","Component","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","palette","grey","children","classes","onClose","other","disableTypography","Typography","variant","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","SendMessageDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","handleClose","aria-labelledby","open","id","align","dividers","gutterBottom","TextareaAutosize","value","onChange","handleMessageChange","placeholder","border","outlineStyle","outlineColor","borderTop","minHeight","autoFocus","handleMessageSend","SwiptButtons","React","useState","setOpen","setMessage","window","html_url","temp_message","displayName","axios","post","issue_number","body","then","res","console","log","catch","err","target","Chat","profilePic","updateToField","Avatar","TabPanel","index","role","hidden","Box","p","socket","Chats","state","matchedContacts","allContacts","handleChange","event","newValue","setState","handleChangeIndex","click","get","response","data","filter","AppBar","Tabs","indicatorColor","textColor","Tab","a11yProps","onChangeIndex","contact","timestamp","avatar_url","MessagePost","content","by","time","ChatForm","typing","username","isTyping","handleSubmit","preventDefault","postMessage","onSubmit","autoComplete","type","ChatScreen","messageHistory","endpoint","process","actionFeedback","actionFeedbackMsg","systemFeedback","componentDidMount","split","pop","scrollDown","socketIOClient","on","isConnected","send","document","querySelector","scrollBy","toString","x","created_at","setTimeout","withRouter","FormDialog","Button","marginRight","Login","match","params","Fragment","CssBaseline","Container","maxWidth","component","person","useStyles","makeStyles","list","fullList","link","display","SideMenu","container","Drawer","PaperProps","BackdropProps","ModalProps","anchor","closeMenu","List","clsx","ListItem","button","divider","disabled","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","edge","delete","setUser","App","connectedUsers","page","currentLabel","find","newLabels","updateTo","partner","concat","info","handleMenuIsOpen","handleCloseMenu","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7b74a4b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PullReqIcon.e2f35405.svg\";","import React from \"react\";\nimport \"./Navbar.css\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Logo from './../../images/PullReqIcon.svg';\n\nfunction Navbar({ backButton, user, menuIsOpen, setMenuIsOpen }) {\n  const toggleDrawer = (e) => {\n    setMenuIsOpen();\n  };\n\n  const history = useHistory ();\n  const location = useLocation();\n\n  return (\n    <div className=\"header\">\n      {(backButton && backButton.icon === 'back') && (\n        <IconButton \n          onClick={e => history.replace(backButton.path)}>\n          <ArrowBackIosIcon fontSize=\"large\" className=\"header_icon\" />\n        </IconButton>\n      )}\n      {(backButton && backButton.icon === 'menu') && (\n        <IconButton \n          onClick={toggleDrawer}>\n          {!menuIsOpen ? (\n            <MenuIcon \n              fontSize=\"large\" \n              className=\"header_icon\" \n            />\n          ) : (\n            <CloseIcon\n              fontSize=\"large\" \n              className=\"header_icon\" \n            />\n          )}\n        </IconButton>\n      )}\n      \n      <Link to=\"/\">\n        <img src={ Logo } alt=\"PullReqLogo\" width=\"40rem\" />ull-req\n      </Link>\n\n      <Link to=\"/chat\">\n        <IconButton style={ { visibility: ((location.pathname !== '/' || !user) && 'hidden') } }>\n          <ForumIcon className=\"header_icon\" fontSize=\"large\" />\n        </IconButton>\n      </Link>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport \"./TinderCards.css\";\nimport { Icon } from '@iconify/react';\nimport gitPullRequest from '@iconify/icons-octicon/git-pull-request';\nimport Chip from '@material-ui/core/Chip';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { formatRelative, subDays } from 'date-fns';\n\n\nclass TinderCards extends Component {\n\n  componentDidMount() {\n    this.props.loadNextPage();\n    this.props.setBackButton('');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.labels !== this.props.labels) {\n      if (this.props.labels.length <= 2) {\n        this.props.loadNextPage();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.message && <h2>{ this.props.message }</h2> }\n        <div className=\"cards__cardcontainer\">\n          { this.props.labels.map((label) => (\n            <TinderCard\n              className=\"swipe watermarked\"\n              key={label._id}\n              preventSwipe={[\"up\", \"down\"]}\n              onCardLeftScreen={ () => this.props.handleCardLeftScreen(label._id) } \n            \n                \n            >\n              <div\n                style={{ backgroundImage: `url(${label.image})` }}\n                className=\"card\">\n                <header>\n                  <h2>\n                    <span><Icon icon={ gitPullRequest } /> </span>\n                    <span>{ label.repo_id.repo }</span>\n                  </h2>\n                  <p>Last updated {\n                    formatRelative(subDays(Date.parse(label.updated_at), 0), new Date())\n                  }</p>\n                </header>\n                <footer>\n                  { label.labels.map(tag => {\n                    return (\n                      <Chip\n                        key={ tag.name + ' ' + tag.color }\n                        label={ tag.name }\n                        style={ { backgroundColor: '#' + tag.color } }\n                        size=\"small\" />\n                    )\n                  }) }\n                  <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link color=\"inherit\">\n                      { label.repo_id.owner }\n                    </Link>\n                    <Link color=\"inherit\" href={ label.owner.url }>\n                      { label.owner.login }\n                    </Link>\n                    {/* <Typography color=\"textPrimary\">Breadcrumb</Typography> */ }\n                  </Breadcrumbs>\n                </footer>\n              </div>\n              { label.repo && (\n                <>\n                  <p>{ label.repo.about }</p>\n                  <p>{ label.repo.title }</p>\n\n                 </>\n              ) }\n            </TinderCard>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TinderCards;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Logo from './../../../images/PullReqGreen.svg';\nimport './SendMessage.css';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  }\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={ classes.root } { ...other }>\n      <Typography variant=\"h6\">{ children }</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={ classes.closeButton } onClick={ onClose }>\n          <CloseIcon />\n        </IconButton>\n      ) : null }\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function SendMessageDialog(props) {\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n   \n      <Dialog\n        onClose={ props.handleClose }\n        fullScreen={ fullScreen }\n        aria-labelledby=\"customized-dialog-title\"\n        open={ props.open }>\n        <DialogTitle id=\"customized-dialog-title\" onClose={ props.handleClose } className=\"dialogHeader\">\n           <img src={ Logo } alt=\"PullReqLogo\" width=\"38rem\" align=\"center\"/>\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            <p>\n            Your message will be sent to the project owner, if they accept your offer, you will be able to chat...<br/><br/>\n            <strong>git commit -m \"</strong>\n            </p>\n          </Typography>\n          <TextareaAutosize  className=\"textArea\"\n            value={ props.message }\n            onChange={ props.handleMessageChange }\n            aria-label=\"empty textarea\"\n            placeholder=\"Why is your code so bad?\"\n            style={ {\n              margin: '0',\n              padding: '1rem 0 0 0',\n              width: '100%',\n              border: 'none',\n              outlineStyle: 'dotted',\n              outlineColor: 'lightgray',\n              borderTop: '3px dotted gray',\n              minHeight: '5rem'\n            } }\n          />\n           <Typography gutterBottom>\n            <p>\n            <strong>\"</strong>\n              {/* <br/>\n              This message has been sent from Pull-request, \n              to connect with the sender, follow this link:\n              ----URL GOES HERE----  */}\n            </p>\n          </Typography>\n        </DialogContent>\n\n        <DialogActions>\n        <IconButton autoFocus onClick={ props.handleClose } color=\"secondary\">\n            Cancel\n          </IconButton>\n        <IconButton autoFocus onClick={ props.handleMessageSend } color=\"inherit\">\n            Pull request\n          </IconButton>\n          \n        </DialogActions>\n      </Dialog>\n    \n  );\n}","import React from 'react';\nimport './SwipeButtons.css';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport IconButton  from '@material-ui/core/IconButton';\nimport SendMessageDialog from './SendMessageDialog';\nimport Logo from './../../../images/PullReqGreen.svg';\nimport axios from 'axios';\n\n\nconst SwiptButtons = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [message, setMessage] = React.useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleMessageSend = () => {\n\n    const label = props.labels ? props.labels[props.labels.length - 1] : '';\n    const user = props.user || '';\n\n    const temp_message = ` \n  ${message}\\n\n  ###Hi ${label.owner.login || 'there'},\n  This message has been sent from <a href=\"https://github.com/TheWebDevsBerlin/pull-req\">Pull-req</a>, to connect with ${user.displayName || ''}, please follow this <a href=\"http://pull-req.herokuapp.com/chat/${user._id}\">Link</a>.\n\n  Cheers,\n  Pull-req team!\n  `;\n    axios.post('/api/label/comment', {\n      owner: label.owner.login,\n      repo: label.repo_id.repo,\n      issue_number: label.issue_number,\n      body: temp_message\n    }).then(res => {\n      console.log('message sent successfully', { res });\n      setOpen(false);\n    }).catch(err => {\n      console.log('message failed to send', { err });\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value)\n  }\n  \n  return !props.label ?\n    (\n      <h1>Fetching some more issues...</h1>\n    ) : (\n    \n    <div className=\"buttons\">\n      <IconButton\n        onClick={ () => props.handleCardLeftScreen(props.label._id) }\n        className=\"buttons_close\">\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n\n      <IconButton className=\"buttons_github\" \n        onClick={() => window.open(props.label.repo.html_url)}>\n        <GitHubIcon fontSize=\"large\" />\n      </IconButton>\n\n      <IconButton className=\"buttons_pull\">\n        <img src={ Logo } alt=\"PullReqLogo\" width=\"40rem\" onClick={ handleClickOpen } />\n      </IconButton>\n      <SendMessageDialog\n        handleClose={ handleClose }\n        handleMessageSend={ handleMessageSend }\n        message={ message }\n        setMessage={ setMessage }\n        handleMessageChange={ handleMessageChange }\n        open={ open }\n      />\n\n    </div>\n  );\n};\n\nexport default SwiptButtons\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport \"./Chat.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Chat({ id, name, profilePic, updateToField }) {\n  return (\n    <Link to={ `/chat/${id}` } onClick={ () => updateToField(id) }>\n      <div className=\"chat\">\n        <Avatar className=\"chat_image\" src={profilePic} />\n        <div className=\"details\">\n          <strong>{ name }</strong>\n        </div>\n      </div>\n    </Link>\n\n  );\n}\n\nexport default Chat;\n","import React from \"react\";\nimport Chat from \"./Chat\";\nimport axios from 'axios';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={ value !== index }\n      id={ `full-width-tabpanel-${index}` }\n      aria-labelledby={ `full-width-tab-${index}` }\n      { ...other }\n    >\n      {value === index && (\n        <Box p={ 2 }>\n          <Typography>{ children }</Typography>\n        </Box>\n      ) }\n    </div>\n  );\n}\n\nclass Chats extends React.Component {\n\n  state = {\n    matchedContacts: [],\n    allContacts: [],\n    value: 0,\n  }\n\n  handleChange = (event, newValue) => {\n    this.setState({ value: newValue });\n  };\n\n  handleChangeIndex = (index) => {\n    this.setState({ value: index });\n  };\n\n  a11yProps(index) {\n    return {\n      id: `full-width-tab-${index}`,\n      'aria-controls': `full-width-tabpanel-${index}`,\n    };\n  }\n\n  componentDidMount() {\n    this.props.setBackButton({ path: '/', icon: 'back', click: '' });\n\n    axios.get(`/api/chat/users/${this.props.user._id}`)\n      .then(response => {\n        this.setState({\n          matchedContacts: response.data.filter(user => user._id !== this.props.user._id)\n        });\n      });\n\n    axios.get(`/api/chat/users`)\n      .then(response => {\n        this.setState({\n          allContacts: response.data.filter(user => user._id !== this.props.user._id)\n        });\n      });\n\n  }\n\n  render() {\n    return (\n      <>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={ this.state.value }\n            onChange={ this.handleChange }\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"full width tabs example\"\n          >\n            <Tab label=\"Matched\" { ...this.a11yProps(0) } />\n            <Tab label=\"Party\" { ...this.a11yProps(1) } />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          index={ this.state.value }\n          className=\"chats-list\"\n          onChangeIndex={ this.handleChangeIndex }>\n          <TabPanel value={ this.state.value } index={ 0 }>\n            <span>Your matches:</span>\n            { this.state.matchedContacts.map(contact => (\n              <Chat\n                key={ contact._id }\n                className=\"chats\"\n                updateToField={ this.props.updateToField }\n                name={ contact.displayName || contact.login }\n                id={ contact._id }\n                message=''\n                timestamp=''\n                profilePic={ contact.avatar_url }\n              />\n            )) }\n          </TabPanel>\n          <TabPanel value={ this.state.value } index={ 1 }>\n            <span>All users:</span>\n            { this.state.allContacts.map(contact => (\n              <Chat\n                key={ contact._id }\n                className=\"chats\"\n                updateToField={ this.props.updateToField }\n                name={ contact.displayName || contact.login }\n                id={ contact._id }\n                message=''\n                timestamp=''\n                profilePic={ contact.avatar_url }\n              />\n            )) }\n          </TabPanel>\n        </SwipeableViews>\n      </>\n    )\n  };\n}\n\nexport default Chats;\n","import React from \"react\";\nimport \"./ChatScreen.css\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport MessagePost from './MessagePost';\nimport ChatForm from './ChatForm';\nimport axios from 'axios'\nimport socketIOClient from \"socket.io-client\";\n\nlet socket;\n\nclass ChatScreen extends React.Component {\n  state = {\n    by: this.props.user._id,\n    to: this.props.to,\n    messageHistory: [],\n    message: \"\",\n    response: \"\", // socket io response\n    endpoint: `${process.env.REACT_APP_API_SERVER_URL}`, // socket io connection\n    actionFeedback: \"\",\n    actionFeedbackMsg: \"\",\n    systemFeedback: \"\"\n  }\n\n  componentDidMount = () => {\n    const to = this.props.location.pathname.split('/').pop();\n    if (!this.state.to) this.setState({ to });\n\n    this.props.setBackButton({ path: '/chat', icon: 'back', click: '' })\n    axios.get(`/api/chat/messages/${this.state.by}/${this.state.to || to}`).then(response => {\n      this.setState({\n        messageHistory: response.data\n      })\n      this.scrollDown();\n    }).catch(err => console.log(err))\n\n    // ### Socket Client ####\n\n    const { endpoint } = this.state;\n    socket = socketIOClient(endpoint);\n\n    socket.on(\"message\", data => {\n      const { type, message } = data\n      if (type === 'message') {\n        this.setState({ response: message })\n        axios.get(`/api/chat/messages/${this.state.by}/${this.state.to}`).then(response => {\n          if (response) this.setState({ messageHistory: response.data })\n          this.scrollDown();\n        })\n      } else if (type === 'typing') {\n        this.setState({ actionFeedback: message });\n      } else if (type === 'system') {\n        this.setState({ systemFeedback: message });\n        this.props.isConnected(message)\n      }\n    });\n\n    socket.send({ type: 'system', message: `${this.state.by} is connected.` })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.actionFeedback !== this.state.actionFeedback) {\n      const to = this.props.location.pathname.split('/').pop();\n      const { actionFeedback } = this.state;\n      if (actionFeedback !== null && actionFeedback.to.toString() === to.toString()) {\n        this.setState({ actionFeedbackMsg: actionFeedback.typing });\n      }\n    }\n  }\n\n  scrollDown = () => {\n    document.querySelector('.chat-area>div').scrollBy(0, 10000);\n  }\n\n\n  isTyping = (typing, to) => {\n    socket.send({ type: 'typing', message: { typing, to } })\n  }\n\n  postMessage = message => {\n\n    axios.post('/api/chat/messages', {\n      to: this.state.to,\n      by: this.state.by,\n      message: message\n    }).then(() => {\n      socket.send({ type: 'message', message });\n      socket.send({ type: 'typing', message: null });\n    }).catch(err => console.log(err))\n    this.setState({\n      message: \"\"\n    })\n  }\n  render() {\n    if (!this.props.user) return (<Redirect to='/' />)\n\n    const messageHistory = this.state.messageHistory.map(x => {\n      return (\n        <li key={ x._id }>\n          <MessagePost user={ this.props.user._id } by={ x.by } to={ x.to } content={ x } time={ x.created_at } />\n        </li>)\n    })\n\n    const { actionFeedbackMsg } = this.state;\n    const { systemFeedback } = this.state;\n    systemFeedback.length && setTimeout(() => {\n      this.setState({ systemFeedback: \"\" })\n    }, 2000)\n\n    return (\n      <div className=\"chat-area\">\n        <div>\n          { messageHistory }\n        </div>\n        <div>\n          { actionFeedbackMsg }\n          { systemFeedback }\n        </div>\n        <ChatForm\n          postMessage={ this.postMessage }\n          user={ this.props.user }\n          isConnected={ this.props.isConnected }\n          to={ this.state.by }\n          isTyping={ this.isTyping } />\n      </div>\n    )\n  }\n\n}\nexport default withRouter(ChatScreen);","import React, { Component } from 'react'\nimport \"./Chat.css\";\nimport \"./ChatScreen.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { formatRelative, subDays } from 'date-fns'\n\nexport default class MessagePost extends Component {\n  state = {\n    user: this.props.user,\n    content: this.props.content.content,\n    by: this.props.by,\n    time: this.props.time\n  }\n\n  render() {\n    let style = ''\n    this.state.by._id === this.state.user ?\n      style = 'chat_textUser' :\n      style = 'chat_text'\n\n    return (\n      <div className={ style }>\n        { this.state.by._id !== this.state.user && (\n          <Avatar src={ this.state.by.avatar_url } />) }\n        <div>\n          <div>{ this.state.content }</div>\n          <div>{\n            formatRelative(subDays(Date.parse(this.state.time), 0), new Date())\n          }</div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Redirect } from \"react-router-dom\";\nimport \"./ChatScreen.css\";\n\nexport default class ChatForm extends Component {\n  state = {\n    user: this.props.user,\n    message: \"\",\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target\n    let typing = value.length ?\n      `${this.state.user.displayName ||\n      this.state.user.username} is typing...` :\n      null\n    this.setState({ [name]: value })\n    this.props.isTyping(typing, this.props.to)\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.postMessage(this.state.message)\n    this.setState({\n      message: \"\"\n    })\n  }\n\n  render() {\n    if (!this.props.user) return (<Redirect to='/' />)\n\n    return (\n      <form className=\"chat_input\" onSubmit={ this.handleSubmit }>\n        <input autoComplete=\"off\"\n          className=\"message_input\"\n          type=\"text\" name=\"message\"\n          placeholder=\"Type your message here...\"\n          value={ this.state.message }\n          onChange={ this.handleChange } />\n        <button className=\"inputBtn\">Send</button>\n      </form>\n    )\n  }\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nexport default function FormDialog(props) {\n  const url = (!props.user) ?\n    `${process.env.REACT_APP_API_SERVER_URL}/api/auth/github` :\n    `${process.env.REACT_APP_API_SERVER_URL}/api/auth/user/${props.user}`;\n\n  return (\n    <Button\n      id='root-login-button'\n      href={ url }\n      variant=\"outlined\"\n      color=\"primary\"\n      className=\"buttons\">\n      <GitHubIcon style={{marginRight: '1rem'}}/>\n      Login / Signup with github\n    </Button>\n  );\n}","\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Signup from './Signup';\n\nclass Login extends Component {\n  render() {\n    console.log(this.props.match.params);\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"sm\" style={ { margin: '2rem', padding: '2rem' } }>\n          <Typography component=\"article\">\n            <h1>Sign up or login</h1>\n            <p>Sign up and login to Pull-Req app in order to chat with ____ regarding a solution for your issue or just get to know a new friend.</p>\n            <Signup user={ this.props.match.params.person } />\n          </Typography>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport clsx from 'clsx';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./Navbar.css\";\n\nimport { logout } from '../../services/auth';\n\nconst useStyles = makeStyles({\n  list: {\n    maxWidth: 350,\n    width: \"75vw\"\n  },\n  fullList: {\n    width: 'auto',\n  },\n  link: {\n    display: 'contents'\n  }\n});\n\nexport default function SideMenu(props) {\n  const classes = useStyles();\n\n  const handleLogoutGithub = e => {\n    e.preventDefault();\n    if(props.user){\n      logout();\n      props.setUser(null);\n      props.closeMenu();\n    };\n  }\n\n  let container = document.querySelector(\"#root\");\n\n  return (\n    <React.Fragment key='left'>\n      <Drawer \n        PaperProps={{ style: { position: 'absolute' } }}\n        BackdropProps={{ style: { position: 'absolute' } }}\n        ModalProps={{\n          container,\n          style: { position: 'absolute' }\n        }}\n        variant=\"temporary\"\n        container={container}\n        anchor='left'\n        open={props.menuIsOpen} \n        onClose={props.closeMenu}\n      >\n        <List className={clsx(classes.list)}>\n          <ListItem button divider disabled>\n            <ListItemIcon><SettingsIcon /></ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n            <ListItemSecondaryAction onClick={props.closeMenu}>\n              <IconButton edge=\"end\" aria-label=\"delete\">\n                <CloseIcon/>\n              </IconButton>              \n            </ListItemSecondaryAction>\n          </ListItem>\n          <hr/>\n          <ListItem button>\n            <ListItemIcon><EditIcon /></ListItemIcon>\n            <ListItemText primary=\"Edit Profile\" />\n          </ListItem>\n          {props.user ? (\n            <ListItem button onClick={handleLogoutGithub}>\n              <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n              <ListItemText primary=\"Log out\" />\n            </ListItem>\n          ):(\n          <ListItem button>\n                <a className={ clsx(classes.link) } href={ `${process.env.REACT_APP_API_SERVER_URL}/api/auth/github` }>\n            <ListItemIcon><GitHubIcon/></ListItemIcon>\n            <ListItemText primary=\"Login / Sign up\" />\n            </a>\n          </ListItem>\n          )}\n        </List>\n      </Drawer>\n    </React.Fragment>\n  );\n}","import axios from 'axios';\n\nconst signup = (username, password) => {\n  return axios\n    .post('/api/auth/signup', { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst loginGitHub = () => {\n  var xhttp = new XMLHttpRequest();\n  xhttp.open(\"GET\", `${process.env.API_SERVER_URL}/api/auth/github`, true);\n  xhttp.send();\n};\n\nconst login = (username, password) => {\n  return axios\n    .post('/api/auth/login', { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  return axios\n    .delete('/api/auth/logout')\n    .then(response => response)\n    .catch(err => err);\n};\n\nexport { signup, loginGitHub, login, logout };","import React, { Component } from 'react'\nimport Navbar from \"./components/navigation/Navbar\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport TinderCards from \"./components/TinderCards\"\nimport SwipeButtons from \"./components/navigation/buttons/SwipeButtons\";\nimport Chats from \"./components/chat/Chats\";\nimport ChatScreen from \"./components/chat/ChatScreen\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport SideMenu from \"./components/navigation/Menu\";\nimport axios from 'axios';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {\n    user: this.props.user,\n    to: '',\n    connectedUsers: [],\n    backButton: { path: '/', icon: 'menu', click: '' },\n    menuIsOpen: false,\n    // cards logic:\n    labels: [],\n    page: 1,\n    \n  }\n\n  handleCardLeftScreen = (id) => {\n    const currentLabel = this.state.labels.find(label => label._id === id);\n    const newLabels = this.state.labels.filter(label => label._id !== id);\n    this.setState({ labels: newLabels });\n    this.setState({ currentLabel });\n  }\n\n  loadNextPage = () => {\n    const q = 'help-wanted&is:public'\n    axios.get(`/api/labels/${q}/2/${this.state.page}`)\n      .then(response => {\n        const labels = [...response.data.data, ...this.state.labels];\n        this.setState({ labels, page: this.state.page + 1 });\n      })\n      .catch(err => this.setState({ message: `Error fetching labels. \\n ${err}` }));\n  }\n\n  setUser = user => {\n    this.setState({ user });\n  }\n\n  updateTo = user => {\n    this.setState({ partner: user })\n  }\n\n  isConnected = user => {\n    const name = user.split(\" \")[0]\n    this.setState({ connectedUsers: this.state.connectedUsers.concat(name) })\n  }\n\n  setBackButton = (info) => {\n    const { path, icon, click } = info;\n    const backButton = {\n      path: path || '',\n      icon: icon || 'menu',\n      click: click || ''\n    }\n    this.setState({ backButton });\n  }\n\n  handleMenuIsOpen = () => {\n    this.setState(prevState => ({ menuIsOpen: !prevState.menuIsOpen }))\n  }\n\n  handleCloseMenu = () => {\n    this.setState(prevState => ({ menuIsOpen: false }))\n  }\n\n  updateToField = (id) => {\n    this.setState({ to: id })\n  }\n\n  render() {\n    return !this.state.labels ?\n      (\n        <h1>Loading...</h1>\n      ) :\n      (\n      <Router className=\"App\">\n        <Navbar\n          user={ this.state.user }\n          setUser={ this.setUser }\n          backButton={ this.state.backButton }\n          menuIsOpen={ this.state.menuIsOpen }\n          setMenuIsOpen={ this.handleMenuIsOpen }\n          closeMenu={ this.handleCloseMenu } />\n        <SideMenu\n          user={ this.state.user }\n          setUser={ this.setUser }\n          menuIsOpen={ this.state.menuIsOpen }\n          closeMenu={ this.handleCloseMenu }\n        />\n        <Switch>\n          <Route exact path=\"/chat/:person\">\n            { this.state.user ? (\n              <ChatScreen\n                user={ this.state.user }\n                to={ this.state.to }\n                isConnected={ this.isConnected }\n                setBackButton={ this.setBackButton } />) :\n              (\n                <Login />\n              ) }\n          </Route>\n          <Route exact path=\"/chat\">\n            { this.state.user ? (\n              <Chats\n                user={ this.state.user }\n                updateToField={ this.updateToField }\n                connectedUsers={ this.state.connectedUsers }\n                setBackButton={ this.setBackButton } />) :\n              (<Redirect to='/login' />)\n            }\n          </Route>\n          <Route exact path='login'>\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <TinderCards\n              user={ this.state.user }\n              loadNextPage={ this.loadNextPage }\n              labels={ this.state.labels }\n              page={ this.state.page }\n              handleCardLeftScreen={ this.handleCardLeftScreen }\n              setBackButton={ this.setBackButton }\n            />\n            { this.state.user && this.state.labels ?\n              (<SwipeButtons\n                user={ this.state.user }\n                labels={ this.state.labels }\n                  label={ this.state.labels[this.state.labels.length - 1] }\n                handleCardLeftScreen={ this.handleCardLeftScreen }\n              />) :\n              (<Signup user={ this.state.user } />)\n            }\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios';\n\n\naxios.get('/api/auth/loggedin')\n  .then(response => {\n    const user = response.data;\n    ReactDOM.render(\n      <BrowserRouter>\n        <App user={user} />\n      </BrowserRouter>,\n      document.getElementById('root')\n    );\n  });\n","module.exports = __webpack_public_path__ + \"static/media/PullReqGreen.e520bfb8.svg\";"],"sourceRoot":""}