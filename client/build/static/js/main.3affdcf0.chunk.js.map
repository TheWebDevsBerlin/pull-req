{"version":3,"sources":["images/PullReqIcon.svg","images/PullReqGreen.svg","components/navigation/Navbar.js","components/TinderCards.js","components/navigation/buttons/SendMessageDialog.js","components/navigation/buttons/SwipeButtons.js","components/chat/Chat.js","components/chat/Chats.js","components/chat/ChatScreen.js","components/chat/MessagePost.js","components/chat/ChatForm.js","components/Signup.js","components/Login.js","components/navigation/Menu.js","services/auth.js","App.js","index.js"],"names":["module","exports","Navbar","backButton","user","menuIsOpen","setMenuIsOpen","history","useHistory","location","useLocation","className","icon","IconButton","onClick","e","replace","path","fontSize","to","src","Logo","alt","width","style","visibility","pathname","TinderCards","this","props","loadNextPage","setBackButton","prevProps","prevState","labels","length","message","map","label","key","_id","preventSwipe","onCardLeftScreen","handleCardLeftScreen","backgroundImage","image","gitPullRequest","repo_id","repo","formatRelative","subDays","Date","parse","updated_at","tag","Chip","name","color","backgroundColor","size","Breadcrumbs","aria-label","Link","owner","href","url","login","about","title","Component","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","palette","grey","children","classes","onClose","other","disableTypography","Typography","variant","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","SendMessageDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","handleClose","aria-labelledby","open","id","dividers","gutterBottom","TextareaAutosize","value","onChange","handleMessageChange","placeholder","border","outlineStyle","outlineColor","borderTop","minHeight","Button","autoFocus","handleMessageSend","SwiptButtons","React","useState","setOpen","setMessage","window","html_url","axios","post","issue_number","body","then","res","console","log","catch","err","target","Chat","profilePic","updateToField","Avatar","TabPanel","index","role","hidden","Box","p","socket","Chats","state","matchedContacts","allContacts","handleChange","event","newValue","setState","handleChangeIndex","click","get","response","data","filter","AppBar","Tabs","indicatorColor","textColor","Tab","a11yProps","onChangeIndex","contact","displayName","timestamp","avatar_url","MessagePost","content","by","time","ChatForm","typing","username","isTyping","handleSubmit","preventDefault","postMessage","onSubmit","autoComplete","type","ChatScreen","messageHistory","endpoint","process","actionFeedback","actionFeedbackMsg","systemFeedback","componentDidMount","split","pop","scrollDown","socketIOClient","on","isConnected","send","document","querySelector","scrollBy","toString","x","created_at","setTimeout","withRouter","FormDialog","marginRight","Login","match","params","Fragment","CssBaseline","Container","maxWidth","component","person","useStyles","makeStyles","list","fullList","link","display","SideMenu","container","Drawer","PaperProps","BackdropProps","ModalProps","anchor","closeMenu","List","clsx","ListItem","button","divider","disabled","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","edge","delete","setUser","App","connectedUsers","page","currentLabel","find","newLabels","updateTo","partner","concat","info","handleMenuIsOpen","handleCloseMenu","exact","ReactDOM","render","getElementById"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,0YCwD5BC,MA9Cf,YAAkE,IAAhDC,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cAKxCC,EAAUC,cACVC,EAAWC,cAEjB,OACE,yBAAKC,UAAU,UACXR,GAAkC,SAApBA,EAAWS,MACzB,kBAACC,EAAA,EAAD,CACEC,QAAS,SAAAC,GAAC,OAAIR,EAAQS,QAAQb,EAAWc,QACzC,kBAAC,IAAD,CAAkBC,SAAS,QAAQP,UAAU,iBAG/CR,GAAkC,SAApBA,EAAWS,MACzB,kBAACC,EAAA,EAAD,CACEC,QAjBa,SAACC,GACpBT,MAiBQD,EAMA,kBAAC,IAAD,CACEa,SAAS,QACTP,UAAU,gBAPZ,kBAAC,IAAD,CACEO,SAAS,QACTP,UAAU,iBAWlB,kBAAC,IAAD,CAAMQ,GAAG,KACP,yBAAKC,IAAMC,IAAOC,IAAI,cAAcC,MAAM,UAD5C,gBAIA,kBAAC,IAAD,CAAMJ,GAAG,SACP,kBAACN,EAAA,EAAD,CAAYW,MAAQ,CAAEC,YAAoC,MAAtBhB,EAASiB,WAAqBtB,IAAS,WACzE,kBAAC,IAAD,CAAWO,UAAU,cAAcO,SAAS,c,mGCmCvCS,E,kLAvEXC,KAAKC,MAAMC,eACXF,KAAKC,MAAME,cAAc,M,yCAGRC,EAAWC,GACxBD,EAAUE,SAAWN,KAAKC,MAAMK,QAC9BN,KAAKC,MAAMK,OAAOC,QAAU,GAC9BP,KAAKC,MAAMC,iB,+BAKP,IAAD,OACP,OACE,oCACGF,KAAKC,MAAMO,SAAW,4BAAMR,KAAKC,MAAMO,SACxC,yBAAKzB,UAAU,wBACXiB,KAAKC,MAAMK,OAAOG,KAAI,SAACC,GAAD,OACtB,kBAAC,IAAD,CACE3B,UAAU,QACV4B,IAAKD,EAAME,IACXC,aAAc,CAAC,KAAM,QACrBC,iBAAmB,kBAAM,EAAKb,MAAMc,qBAAqBL,EAAME,OAE/D,yBACEhB,MAAO,CAAEoB,gBAAgB,OAAD,OAASN,EAAMO,MAAf,MACxBlC,UAAU,QACV,gCACE,4BACE,8BAAM,kBAAC,OAAD,CAAMC,KAAOkC,MAAnB,KACA,8BAAQR,EAAMS,QAAQC,OAExB,2CACEC,YAAeC,YAAQC,KAAKC,MAAMd,EAAMe,YAAa,GAAI,IAAIF,QAGjE,gCACIb,EAAMJ,OAAOG,KAAI,SAAAiB,GACjB,OACE,kBAACC,EAAA,EAAD,CACEhB,IAAMe,EAAIE,KAAO,IAAMF,EAAIG,MAC3BnB,MAAQgB,EAAIE,KACZhC,MAAQ,CAAEkC,gBAAiB,IAAMJ,EAAIG,OACrCE,KAAK,aAGX,kBAACC,EAAA,EAAD,CAAaC,aAAW,cACtB,kBAACC,EAAA,EAAD,CAAML,MAAM,WACRnB,EAAMS,QAAQgB,OAElB,kBAACD,EAAA,EAAD,CAAML,MAAM,UAAUO,KAAO1B,EAAMyB,MAAME,KACrC3B,EAAMyB,MAAMG,UAMpB5B,EAAMU,MACN,oCACE,2BAAKV,EAAMU,KAAKmB,OAChB,2BAAK7B,EAAMU,KAAKoB,kB,GA/DRC,a,gICiBpBC,EAAcC,aAbL,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,IAEzBC,YAAa,CACXC,SAAU,WACVC,MAAOP,EAAMI,QAAQ,GACrBI,IAAKR,EAAMI,QAAQ,GACnBnB,MAAOe,EAAMS,QAAQC,KAAK,SAIVX,EAAmB,SAAC1C,GAAW,IACzCsD,EAAyCtD,EAAzCsD,SAAUC,EAA+BvD,EAA/BuD,QAASC,EAAsBxD,EAAtBwD,QAAYC,EADS,YACCzD,EADD,kCAEhD,OACE,kBAAC,IAAD,eAAgB0D,mBAAiB,EAAC5E,UAAYyE,EAAQX,MAAYa,GAChE,kBAACE,EAAA,EAAD,CAAYC,QAAQ,MAAON,GAC1BE,EACC,kBAACxE,EAAA,EAAD,CAAYgD,aAAW,QAAQlD,UAAYyE,EAAQP,YAAc/D,QAAUuE,GACzE,kBAAC,IAAD,OAEA,SAKJK,EAAgBnB,aAAW,SAACC,GAAD,MAAY,CAC3CC,KAAM,CACJE,QAASH,EAAMI,QAAQ,OAFLL,CAIlBoB,KAEEC,EAAgBrB,aAAW,SAACC,GAAD,MAAY,CAC3CC,KAAM,CACJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,OAHLL,CAKlBsB,KAEW,SAASC,GAAkBjE,GAExC,IAAM2C,EAAQuB,cACRC,EAAaC,YAAczB,EAAM0B,YAAYC,KAAK,OAExD,OAEI,kBAACC,EAAA,EAAD,CACEf,QAAUxD,EAAMwE,YAChBL,WAAaA,EACbM,kBAAgB,0BAChBC,KAAO1E,EAAM0E,MACb,kBAAC,EAAD,CAAaC,GAAG,0BAA0BnB,QAAUxD,EAAMwE,aACxD,qDAEF,kBAAC,EAAD,CAAeI,UAAQ,GACrB,kBAACjB,EAAA,EAAD,CAAYkB,cAAY,GACtB,qFAIF,kBAACC,EAAA,EAAD,CACEC,MAAQ/E,EAAMO,QACdyE,SAAWhF,EAAMiF,oBACjBjD,aAAW,iBACXkD,YAAY,2BACZvF,MAAQ,CACNkD,OAAQ,IACRC,QAAS,aACTpD,MAAO,OACPyF,OAAQ,OACRC,aAAc,SACdC,aAAc,YACdC,UAAW,kBACXC,UAAW,WAKjB,kBAAC,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQC,WAAS,EAACxG,QAAUe,EAAM0F,kBAAoB9D,MAAM,WAA5D,gBAGE,kBAAC4D,EAAA,EAAD,CAAQC,WAAS,EAACxG,QAAUe,EAAMwE,YAAc5C,MAAM,WAAtD,Y,6CCtBK+D,GAlEM,SAAC3F,GAAW,IAAD,EACN4F,IAAMC,UAAS,GADT,mBACvBnB,EADuB,KACjBoB,EADiB,OAEAF,IAAMC,SAAS,IAFf,mBAEvBtF,EAFuB,KAEdwF,EAFc,KAgC9B,OAEE,yBAAKjH,UAAU,WACb,kBAACE,EAAA,EAAD,CACEC,QAAU,kBAAMe,EAAMc,qBAAqBd,EAAMS,MAAME,MACvD7B,UAAU,iBACV,kBAAC,IAAD,CAAWO,SAAS,WAItB,kBAACL,EAAA,EAAD,CAAYF,UAAU,iBACpBG,QAAS,kBAAM+G,OAAOtB,KAAK1E,EAAMS,MAAMU,KAAK8E,YAC5C,kBAAC,IAAD,CAAY5G,SAAS,WAIvB,kBAACL,EAAA,EAAD,CAAYF,UAAU,gBACpB,yBAAKS,IAAMC,KAAOC,IAAI,cAAcC,MAAM,QAAQT,QA7ChC,WACtB6G,GAAQ,OA8CN,kBAAC7B,GAAD,CACEO,YA5Bc,WAClBsB,GAAQ,IA4BJJ,kBA3CoB,WACxBQ,KAAMC,KAAK,qBAAsB,CAC/BjE,MAAO,SACPf,KAAM,WACNiF,aAAc,EACdC,KAAM9F,IACL+F,MAAK,SAAAC,GACNC,QAAQC,IAAI,4BAA6B,CAAEF,QAC3CT,GAAQ,MACPY,OAAM,SAAAC,GACPH,QAAQC,IAAI,yBAA0B,CAAEE,YAkCtCpG,QAAUA,EACVE,MAAQT,EAAMS,MACdwE,oBA5BsB,SAAC/F,GAC3B6G,EAAW7G,EAAE0H,OAAO7B,QA4BhBL,KAAOA,M,iBC/CAmC,OAdf,YAAwD,IAAxClC,EAAuC,EAAvCA,GAAIhD,EAAmC,EAAnCA,KAAMmF,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cACpC,OACE,kBAAC,IAAD,CAAMzH,GAAE,gBAAYqF,GAAO1F,QAAU,kBAAM8H,EAAcpC,KACvD,yBAAK7F,UAAU,QACb,kBAACkI,GAAA,EAAD,CAAQlI,UAAU,aAAaS,IAAKuH,IACpC,yBAAKhI,UAAU,WACb,gCAAU6C,O,6DCApB,SAASsF,GAASjH,GAAQ,IAChBsD,EAAqCtD,EAArCsD,SAAUyB,EAA2B/E,EAA3B+E,MAAOmC,EAAoBlH,EAApBkH,MAAUzD,EADZ,YACsBzD,EADtB,8BAGvB,OACE,uCACEmH,KAAK,WACLC,OAASrC,IAAUmC,EACnBvC,GAAE,8BAA0BuC,GAC5BzC,kBAAA,yBAAoCyC,IAC/BzD,GAEJsB,IAAUmC,GACT,kBAACG,GAAA,EAAD,CAAKC,EAAI,GACP,kBAAC3D,EAAA,EAAD,KAAcL,K,IChBpBiE,GDyHWC,G,4MAhGbC,MAAQ,CACNC,gBAAiB,GACjBC,YAAa,GACb5C,MAAO,G,EAGT6C,aAAe,SAACC,EAAOC,GACrB,EAAKC,SAAS,CAAEhD,MAAO+C,K,EAGzBE,kBAAoB,SAACd,GACnB,EAAKa,SAAS,CAAEhD,MAAOmC,K,wDAGfA,GACR,MAAO,CACLvC,GAAG,kBAAD,OAAoBuC,GACtB,gBAAgB,uBAAhB,OAAwCA,M,0CAIvB,IAAD,OAClBnH,KAAKC,MAAME,cAAc,CAAEd,KAAM,IAAKL,KAAM,OAAQkJ,MAAO,KAE3D/B,KAAMgC,IAAN,0BAA6BnI,KAAKC,MAAMzB,KAAKoC,MAC1C2F,MAAK,SAAA6B,GACJ,EAAKJ,SAAS,CACZL,gBAAiBS,EAASC,KAAKC,QAAO,SAAA9J,GAAI,OAAIA,EAAKoC,MAAQ,EAAKX,MAAMzB,KAAKoC,YAIjFuF,KAAMgC,IAAN,mBACG5B,MAAK,SAAA6B,GACJ,EAAKJ,SAAS,CACZJ,YAAaQ,EAASC,KAAKC,QAAO,SAAA9J,GAAI,OAAIA,EAAKoC,MAAQ,EAAKX,MAAMzB,KAAKoC,c,+BAMrE,IAAD,OACP,OACE,oCACE,kBAAC2H,GAAA,EAAD,CAAQrF,SAAS,SAASrB,MAAM,WAC9B,kBAAC2G,GAAA,EAAD,CACExD,MAAQhF,KAAK0H,MAAM1C,MACnBC,SAAWjF,KAAK6H,aAChBY,eAAe,UACfC,UAAU,UACV7E,QAAQ,YACR5B,aAAW,2BAEX,kBAAC0G,GAAA,EAAD,eAAKjI,MAAM,WAAeV,KAAK4I,UAAU,KACzC,kBAACD,GAAA,EAAD,eAAKjI,MAAM,SAAaV,KAAK4I,UAAU,OAG3C,kBAAC,KAAD,CACEzB,MAAQnH,KAAK0H,MAAM1C,MACnBjG,UAAU,aACV8J,cAAgB7I,KAAKiI,mBACrB,kBAACf,GAAD,CAAUlC,MAAQhF,KAAK0H,MAAM1C,MAAQmC,MAAQ,GAC3C,+CACEnH,KAAK0H,MAAMC,gBAAgBlH,KAAI,SAAAqI,GAAO,OACtC,kBAAC,GAAD,CACEnI,IAAMmI,EAAQlI,IACd7B,UAAU,QACViI,cAAgB,EAAK/G,MAAM+G,cAC3BpF,KAAOkH,EAAQC,aAAeD,EAAQxG,MACtCsC,GAAKkE,EAAQlI,IACbJ,QAAQ,GACRwI,UAAU,GACVjC,WAAa+B,EAAQG,iBAI3B,kBAAC/B,GAAD,CAAUlC,MAAQhF,KAAK0H,MAAM1C,MAAQmC,MAAQ,GAC3C,4CACEnH,KAAK0H,MAAME,YAAYnH,KAAI,SAAAqI,GAAO,OAClC,kBAAC,GAAD,CACEnI,IAAMmI,EAAQlI,IACd7B,UAAU,QACViI,cAAgB,EAAK/G,MAAM+G,cAC3BpF,KAAOkH,EAAQC,aAAeD,EAAQxG,MACtCsC,GAAKkE,EAAQlI,IACbJ,QAAQ,GACRwI,UAAU,GACVjC,WAAa+B,EAAQG,uB,GAxFjBpD,IAAMpD,WEzBLyG,I,kNACnBxB,MAAQ,CACNlJ,KAAM,EAAKyB,MAAMzB,KACjB2K,QAAS,EAAKlJ,MAAMkJ,QAAQA,QAC5BC,GAAI,EAAKnJ,MAAMmJ,GACfC,KAAM,EAAKpJ,MAAMoJ,M,uDAIjB,IAAIzJ,EAAQ,GAKZ,OAHEA,EADFI,KAAK0H,MAAM0B,GAAGxI,MAAQZ,KAAK0H,MAAMlJ,KACvB,gBACA,YAGR,yBAAKO,UAAYa,GACbI,KAAK0H,MAAM0B,GAAGxI,MAAQZ,KAAK0H,MAAMlJ,MACjC,kBAACyI,GAAA,EAAD,CAAQzH,IAAMQ,KAAK0H,MAAM0B,GAAGH,aAC9B,6BACE,6BAAOjJ,KAAK0H,MAAMyB,SAClB,6BACE9H,YAAeC,YAAQC,KAAKC,MAAMxB,KAAK0H,MAAM2B,MAAO,GAAI,IAAI9H,a,GArB/BkB,c,UCFpB6G,G,4MACnB5B,MAAQ,CACNlJ,KAAM,EAAKyB,MAAMzB,KACjBgC,QAAS,I,EAGXqH,aAAe,SAAA1I,GAAM,IAAD,EACMA,EAAE0H,OAAlBjF,EADU,EACVA,KAAMoD,EADI,EACJA,MACVuE,EAASvE,EAAMzE,OAAN,UACR,EAAKmH,MAAMlJ,KAAKuK,aACnB,EAAKrB,MAAMlJ,KAAKgL,SAFL,iBAGX,KACF,EAAKxB,SAAL,gBAAiBpG,EAAOoD,IACxB,EAAK/E,MAAMwJ,SAASF,EAAQ,EAAKtJ,MAAMV,K,EAGzCmK,aAAe,SAAAvK,GACbA,EAAEwK,iBACF,EAAK1J,MAAM2J,YAAY,EAAKlC,MAAMlH,SAClC,EAAKwH,SAAS,CACZxH,QAAS,M,uDAKX,OAAKR,KAAKC,MAAMzB,KAGd,0BAAMO,UAAU,aAAa8K,SAAW7J,KAAK0J,cAC3C,2BAAOI,aAAa,MAClB/K,UAAU,gBACVgL,KAAK,OAAOnI,KAAK,UACjBuD,YAAY,4BACZH,MAAQhF,KAAK0H,MAAMlH,QACnByE,SAAWjF,KAAK6H,eAClB,4BAAQ9I,UAAU,YAAlB,SAV0B,kBAAC,IAAD,CAAUQ,GAAG,U,GAzBTkD,a,qBFMhCuH,G,4MACJtC,MAAQ,CACN0B,GAAI,EAAKnJ,MAAMzB,KAAKoC,IACpBrB,GAAI,EAAKU,MAAMV,GACf0K,eAAgB,GAChBzJ,QAAS,GACT4H,SAAU,GACV8B,SAAS,GAAD,OAAKC,kCACbC,eAAgB,GAChBC,kBAAmB,GACnBC,eAAgB,I,EAGlBC,kBAAoB,WAClB,IAAMhL,EAAK,EAAKU,MAAMpB,SAASiB,SAAS0K,MAAM,KAAKC,MAC9C,EAAK/C,MAAMnI,IAAI,EAAKyI,SAAS,CAAEzI,OAEpC,EAAKU,MAAME,cAAc,CAAEd,KAAM,QAASL,KAAM,OAAQkJ,MAAO,KAC/D/B,KAAMgC,IAAN,6BAAgC,EAAKT,MAAM0B,GAA3C,YAAiD,EAAK1B,MAAMnI,IAAMA,IAAMgH,MAAK,SAAA6B,GAC3E,EAAKJ,SAAS,CACZiC,eAAgB7B,EAASC,OAE3B,EAAKqC,gBACJ/D,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAVJ,IAchBsD,EAAa,EAAKxC,MAAlBwC,UACR1C,GAASmD,KAAeT,IAEjBU,GAAG,WAAW,SAAAvC,GAAS,IACpB0B,EAAkB1B,EAAlB0B,KAAMvJ,EAAY6H,EAAZ7H,QACD,YAATuJ,GACF,EAAK/B,SAAS,CAAEI,SAAU5H,IAC1B2F,KAAMgC,IAAN,6BAAgC,EAAKT,MAAM0B,GAA3C,YAAiD,EAAK1B,MAAMnI,KAAMgH,MAAK,SAAA6B,GACjEA,GAAU,EAAKJ,SAAS,CAAEiC,eAAgB7B,EAASC,OACvD,EAAKqC,iBAEW,WAATX,EACT,EAAK/B,SAAS,CAAEoC,eAAgB5J,IACd,WAATuJ,IACT,EAAK/B,SAAS,CAAEsC,eAAgB9J,IAChC,EAAKP,MAAM4K,YAAYrK,OAI3BgH,GAAOsD,KAAK,CAAEf,KAAM,SAAUvJ,QAAQ,GAAD,OAAK,EAAKkH,MAAM0B,GAAhB,qB,EAavCsB,WAAa,WACXK,SAASC,cAAc,kBAAkBC,SAAS,EAAG,M,EAIvDxB,SAAW,SAACF,EAAQhK,GAClBiI,GAAOsD,KAAK,CAAEf,KAAM,SAAUvJ,QAAS,CAAE+I,SAAQhK,S,EAGnDqK,YAAc,SAAApJ,GAEZ2F,KAAMC,KAAK,qBAAsB,CAC/B7G,GAAI,EAAKmI,MAAMnI,GACf6J,GAAI,EAAK1B,MAAM0B,GACf5I,QAASA,IACR+F,MAAK,WACNiB,GAAOsD,KAAK,CAAEf,KAAM,UAAWvJ,YAC/BgH,GAAOsD,KAAK,CAAEf,KAAM,SAAUvJ,QAAS,UACtCmG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAC5B,EAAKoB,SAAS,CACZxH,QAAS,M,iEA9BMJ,EAAWC,GAC5B,GAAIA,EAAU+J,iBAAmBpK,KAAK0H,MAAM0C,eAAgB,CAC1D,IAAM7K,EAAKS,KAAKC,MAAMpB,SAASiB,SAAS0K,MAAM,KAAKC,MAC3CL,EAAmBpK,KAAK0H,MAAxB0C,eACe,OAAnBA,GAA2BA,EAAe7K,GAAG2L,aAAe3L,EAAG2L,YACjElL,KAAKgI,SAAS,CAAEqC,kBAAmBD,EAAeb,Y,+BA4B9C,IAAD,OACP,IAAKvJ,KAAKC,MAAMzB,KAAM,OAAQ,kBAAC,IAAD,CAAUe,GAAG,MAE3C,IAAM0K,EAAiBjK,KAAK0H,MAAMuC,eAAexJ,KAAI,SAAA0K,GACnD,OACE,wBAAIxK,IAAMwK,EAAEvK,KACV,kBAAC,GAAD,CAAapC,KAAO,EAAKyB,MAAMzB,KAAKoC,IAAMwI,GAAK+B,EAAE/B,GAAK7J,GAAK4L,EAAE5L,GAAK4J,QAAUgC,EAAI9B,KAAO8B,EAAEC,iBAIvFf,EAAsBrK,KAAK0H,MAA3B2C,kBACAC,EAAmBtK,KAAK0H,MAAxB4C,eAKR,OAJAA,EAAe/J,QAAU8K,YAAW,WAClC,EAAKrD,SAAS,CAAEsC,eAAgB,OAC/B,KAGD,yBAAKvL,UAAU,aACb,6BACIkL,GAEJ,6BACII,EACAC,GAEJ,kBAAC,GAAD,CACEV,YAAc5J,KAAK4J,YACnBpL,KAAOwB,KAAKC,MAAMzB,KAClBqM,YAAc7K,KAAKC,MAAM4K,YACzBtL,GAAKS,KAAK0H,MAAM0B,GAChBK,SAAWzJ,KAAKyJ,gB,GAhHD5D,IAAMpD,WAsHhB6I,eAAWtB,I,oBG5HX,SAASuB,GAAWtL,GACjC,IAAMoC,EAAQpC,EAAMzB,KAAR,UAEP2L,iCAFO,0BAE+ClK,EAAMzB,MAFrD,UACP2L,iCADO,oBAIZ,OACE,kBAAC1E,EAAA,EAAD,CACEb,GAAG,oBACHxC,KAAOC,EACPwB,QAAQ,WACRhC,MAAM,UACN9C,UAAU,WACV,kBAAC,IAAD,CAAYa,MAAO,CAAC4L,YAAa,UANnC,8B,ICFEC,G,uKAGF,OADAhF,QAAQC,IAAI1G,KAAKC,MAAMyL,MAAMC,QAE3B,kBAAC,IAAMC,SAAP,KACE,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAWC,SAAS,KAAKnM,MAAQ,CAAEkD,OAAQ,OAAQC,QAAS,SAC1D,kBAACa,EAAA,EAAD,CAAYoI,UAAU,WACpB,gDACA,iKACA,kBAAC,GAAD,CAAQxN,KAAOwB,KAAKC,MAAMyL,MAAMC,OAAOM,gB,GAV/BxJ,aAkBL6I,eAAWG,I,6ICLpBS,GAAYC,aAAW,CAC3BC,KAAM,CACJL,SAAU,IACVpM,MAAO,QAET0M,SAAU,CACR1M,MAAO,QAET2M,KAAM,CACJC,QAAS,cAIE,SAASC,GAASvM,GAC/B,IAAMuD,EAAU0I,KAWZO,EAAY1B,SAASC,cAAc,SAEvC,OACE,kBAAC,IAAMY,SAAP,CAAgBjL,IAAI,QAClB,kBAAC+L,GAAA,EAAD,CACEC,WAAY,CAAE/M,MAAO,CAAEsD,SAAU,aACjC0J,cAAe,CAAEhN,MAAO,CAAEsD,SAAU,aACpC2J,WAAY,CACVJ,YACA7M,MAAO,CAAEsD,SAAU,aAErBW,QAAQ,YACR4I,UAAWA,EACXK,OAAO,OACPnI,KAAM1E,EAAMxB,WACZgF,QAASxD,EAAM8M,WAEf,kBAACC,GAAA,EAAD,CAAMjO,UAAWkO,aAAKzJ,EAAQ4I,OAC5B,kBAACc,GAAA,EAAD,CAAUC,QAAM,EAACC,SAAO,EAACC,UAAQ,GAC/B,kBAACC,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,aACtB,kBAACC,GAAA,EAAD,CAAyBvO,QAASe,EAAM8M,WACtC,kBAAC9N,EAAA,EAAD,CAAYyO,KAAK,MAAMzL,aAAW,UAChC,kBAAC,IAAD,SAIN,6BACA,kBAACiL,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACG,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAEvBvN,EAAMzB,KACL,kBAAC0O,GAAA,EAAD,CAAUC,QAAM,EAACjO,QA1CA,SAAAC,GACzBA,EAAEwK,iBACC1J,EAAMzB,OCRJ2H,KACJwH,OAAO,oBACPpH,MAAK,SAAA6B,GAAQ,OAAIA,KACjBzB,OAAM,SAAAC,GAAG,OAAIA,KDOZ3G,EAAM2N,QAAQ,MACd3N,EAAM8M,eAsCE,kBAACO,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,aAG1B,kBAACN,GAAA,EAAD,CAAUC,QAAM,GACV,uBAAGpO,UAAYkO,aAAKzJ,EAAQ8I,MAAQlK,KAAI,UAAM+H,iCAAN,qBAC5C,kBAACmD,GAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,yB,WEyDnBK,G,4MAhIbnG,MAAQ,CACNlJ,KAAM,EAAKyB,MAAMzB,KACjBe,GAAI,GACJuO,eAAgB,GAChBvP,WAAY,CAAEc,KAAM,IAAKL,KAAM,OAAQkJ,MAAO,IAC9CzJ,YAAY,EAEZ6B,OAAQ,GACRyN,KAAM,G,EAIRhN,qBAAuB,SAAC6D,GACtB,IAAMoJ,EAAe,EAAKtG,MAAMpH,OAAO2N,MAAK,SAAAvN,GAAK,OAAIA,EAAME,MAAQgE,KAC7DsJ,EAAY,EAAKxG,MAAMpH,OAAOgI,QAAO,SAAA5H,GAAK,OAAIA,EAAME,MAAQgE,KAClE,EAAKoD,SAAS,CAAE1H,OAAQ4N,IACxB,EAAKlG,SAAS,CAAEgG,kB,EAGlB9N,aAAe,WAEbiG,KAAMgC,IAAN,sBADU,wBACV,cAAgC,EAAKT,MAAMqG,OACxCxH,MAAK,SAAA6B,GACJ,IAAM9H,EAAM,sBAAO8H,EAASC,KAAKA,MAArB,YAA8B,EAAKX,MAAMpH,SACrD,EAAK0H,SAAS,CAAE1H,SAAQyN,KAAM,EAAKrG,MAAMqG,KAAO,OAEjDpH,OAAM,SAAAC,GAAG,OAAI,EAAKoB,SAAS,CAAExH,QAAQ,6BAAD,OAA+BoG,S,EAGxEgH,QAAU,SAAApP,GACR,EAAKwJ,SAAS,CAAExJ,U,EAGlB2P,SAAW,SAAA3P,GACT,EAAKwJ,SAAS,CAAEoG,QAAS5P,K,EAG3BqM,YAAc,SAAArM,GACZ,IAAMoD,EAAOpD,EAAKgM,MAAM,KAAK,GAC7B,EAAKxC,SAAS,CAAE8F,eAAgB,EAAKpG,MAAMoG,eAAeO,OAAOzM,M,EAGnEzB,cAAgB,SAACmO,GAAU,IAEnB/P,EAAa,CACjBc,KAF4BiP,EAAtBjP,MAEQ,GACdL,KAH4BsP,EAAhBtP,MAGE,OACdkJ,MAJ4BoG,EAAVpG,OAIF,IAElB,EAAKF,SAAS,CAAEzJ,gB,EAGlBgQ,iBAAmB,WACjB,EAAKvG,UAAS,SAAA3H,GAAS,MAAK,CAAE5B,YAAa4B,EAAU5B,gB,EAGvD+P,gBAAkB,WAChB,EAAKxG,UAAS,SAAA3H,GAAS,MAAK,CAAE5B,YAAY,O,EAG5CuI,cAAgB,SAACpC,GACf,EAAKoD,SAAS,CAAEzI,GAAIqF,K,uDAIpB,OACE,kBAAC,IAAD,CAAQ7F,UAAU,OAChB,kBAAC,EAAD,CACEP,KAAOwB,KAAK0H,MAAMlJ,KAClBoP,QAAU5N,KAAK4N,QACfrP,WAAayB,KAAK0H,MAAMnJ,WACxBE,WAAauB,KAAK0H,MAAMjJ,WACxBC,cAAgBsB,KAAKuO,iBACrBxB,UAAY/M,KAAKwO,kBACnB,kBAAChC,GAAD,CACEhO,KAAOwB,KAAK0H,MAAMlJ,KAClBoP,QAAU5N,KAAK4N,QACfnP,WAAauB,KAAK0H,MAAMjJ,WACxBsO,UAAY/M,KAAKwO,kBAEnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACpP,KAAK,iBACdW,KAAK0H,MAAMlJ,KACX,kBAAC,GAAD,CACEA,KAAOwB,KAAK0H,MAAMlJ,KAClBe,GAAKS,KAAK0H,MAAMnI,GAChBsL,YAAc7K,KAAK6K,YACnB1K,cAAgBH,KAAKG,gBAErB,kBAAC,GAAD,OAGN,kBAAC,IAAD,CAAOsO,OAAK,EAACpP,KAAK,SACdW,KAAK0H,MAAMlJ,KACX,kBAAC,GAAD,CACEA,KAAOwB,KAAK0H,MAAMlJ,KAClBwI,cAAgBhH,KAAKgH,cACrB8G,eAAiB9N,KAAK0H,MAAMoG,eAC5B3N,cAAgBH,KAAKG,gBACtB,kBAAC,IAAD,CAAUZ,GAAG,YAGlB,kBAAC,IAAD,CAAOkP,OAAK,EAACpP,KAAK,SAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOoP,OAAK,EAACpP,KAAK,KAChB,kBAAC,EAAD,CACEb,KAAOwB,KAAK0H,MAAMlJ,KAClB0B,aAAeF,KAAKE,aACpBI,OAASN,KAAK0H,MAAMpH,OACpByN,KAAO/N,KAAK0H,MAAMqG,KAClBhN,qBAAuBf,KAAKe,qBAC5BZ,cAAgBH,KAAKG,gBAErBH,KAAK0H,MAAMlJ,KACV,kBAAC,GAAD,CACCkC,MAAQV,KAAK0H,MAAMpH,OAAON,KAAK0H,MAAMpH,OAAOC,OAAS,GACrDQ,qBAAuBf,KAAKe,uBAE7B,kBAAC,GAAD,CAAQvC,KAAOwB,KAAK0H,MAAMlJ,c,GAzHvBiE,aCNlB0D,KAAMgC,IAAI,sBACP5B,MAAK,SAAA6B,GACJ,IAAM5J,EAAO4J,EAASC,KACtBqG,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAKnQ,KAAMA,KAEbuM,SAAS6D,eAAe,a","file":"static/js/main.3affdcf0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PullReqIcon.e2f35405.svg\";","module.exports = __webpack_public_path__ + \"static/media/PullReqGreen.e520bfb8.svg\";","import React from \"react\";\nimport \"./Navbar.css\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Logo from './../../images/PullReqIcon.svg';\n\nfunction Navbar({ backButton, user, menuIsOpen, setMenuIsOpen }) {\n  const toggleDrawer = (e) => {\n    setMenuIsOpen();\n  };\n\n  const history = useHistory ();\n  const location = useLocation();\n\n  return (\n    <div className=\"header\">\n      {(backButton && backButton.icon === 'back') && (\n        <IconButton \n          onClick={e => history.replace(backButton.path)}>\n          <ArrowBackIosIcon fontSize=\"large\" className=\"header_icon\" />\n        </IconButton>\n      )}\n      {(backButton && backButton.icon === 'menu') && (\n        <IconButton \n          onClick={toggleDrawer}>\n          {!menuIsOpen ? (\n            <MenuIcon \n              fontSize=\"large\" \n              className=\"header_icon\" \n            />\n          ) : (\n            <CloseIcon\n              fontSize=\"large\" \n              className=\"header_icon\" \n            />\n          )}\n        </IconButton>\n      )}\n      \n      <Link to=\"/\">\n        <img src={ Logo } alt=\"PullReqLogo\" width=\"40rem\" /> ull request\n      </Link>\n\n      <Link to=\"/chat\">\n        <IconButton style={ { visibility: ((location.pathname !== '/' || !user) && 'hidden') } }>\n          <ForumIcon className=\"header_icon\" fontSize=\"large\" />\n        </IconButton>\n      </Link>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport \"./TinderCards.css\";\nimport { Icon } from '@iconify/react';\nimport gitPullRequest from '@iconify/icons-octicon/git-pull-request';\nimport Chip from '@material-ui/core/Chip';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { formatRelative, subDays } from 'date-fns'\n\nclass TinderCards extends Component {\n\n  componentDidMount() {\n    this.props.loadNextPage();\n    this.props.setBackButton('');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.labels !== this.props.labels) {\n      if (this.props.labels.length <= 2) {\n        this.props.loadNextPage();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.message && <h2>{ this.props.message }</h2> }\n        <div className=\"cards__cardcontainer\">\n          { this.props.labels.map((label) => (\n            <TinderCard\n              className=\"swipe\"\n              key={label._id}\n              preventSwipe={[\"up\", \"down\"]}\n              onCardLeftScreen={ () => this.props.handleCardLeftScreen(label._id) } \n            >\n              <div\n                style={{ backgroundImage: `url(${label.image})` }}\n                className=\"card\">\n                <header>\n                  <h2>\n                    <span><Icon icon={ gitPullRequest } /> </span>\n                    <span>{ label.repo_id.repo }</span>\n                  </h2>\n                  <p>Last updated {\n                    formatRelative(subDays(Date.parse(label.updated_at), 0), new Date())\n                  }</p>\n                </header>\n                <footer>\n                  { label.labels.map(tag => {\n                    return (\n                      <Chip\n                        key={ tag.name + ' ' + tag.color }\n                        label={ tag.name }\n                        style={ { backgroundColor: '#' + tag.color } }\n                        size=\"small\" />\n                    )\n                  }) }\n                  <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link color=\"inherit\">\n                      { label.repo_id.owner }\n                    </Link>\n                    <Link color=\"inherit\" href={ label.owner.url }>\n                      { label.owner.login }\n                    </Link>\n                    {/* <Typography color=\"textPrimary\">Breadcrumb</Typography> */ }\n                  </Breadcrumbs>\n                </footer>\n              </div>\n              { label.repo && (\n                <>\n                  <p>{ label.repo.about }</p>\n                  <p>{ label.repo.title }</p>\n                </>\n              ) }\n            </TinderCard>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TinderCards;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  }\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={ classes.root } { ...other }>\n      <Typography variant=\"h6\">{ children }</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={ classes.closeButton } onClick={ onClose }>\n          <CloseIcon />\n        </IconButton>\n      ) : null }\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function SendMessageDialog(props) {\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n   \n      <Dialog\n        onClose={ props.handleClose }\n        fullScreen={ fullScreen }\n        aria-labelledby=\"customized-dialog-title\"\n        open={ props.open }>\n        <DialogTitle id=\"customized-dialog-title\" onClose={ props.handleClose }>\n          <h3>Send a pull request!</h3>\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            <p>\n              Your message will be sent to the repo owner on GitHub\n            </p>\n          </Typography>\n          <TextareaAutosize\n            value={ props.message }\n            onChange={ props.handleMessageChange }\n            aria-label=\"empty textarea\"\n            placeholder=\"Why is your code so bad?\"\n            style={ {\n              margin: '0',\n              padding: '1rem 0 0 0',\n              width: '100%',\n              border: 'none',\n              outlineStyle: 'dotted',\n              outlineColor: 'lightgray',\n              borderTop: '3px dotted gray',\n              minHeight: '5rem'\n            } }\n          />\n        </DialogContent>\n\n        <DialogActions>\n        <Button autoFocus onClick={ props.handleMessageSend } color=\"primary\">\n            Pull request\n          </Button>\n          <Button autoFocus onClick={ props.handleClose } color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    \n  );\n}","import React from 'react';\nimport './SwipeButtons.css';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport IconButton  from '@material-ui/core/IconButton';\nimport SendMessageDialog from './SendMessageDialog';\nimport Logo from './../../../images/PullReqGreen.svg';\nimport axios from 'axios';\n\nconst SwiptButtons = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [message, setMessage] = React.useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n// https://api.github.com/repos/giladt/getHired/issues/4/comments\n// https://api.github.com/repos/giladt/getHired/issues/4/comments\n\n  const handleMessageSend = () => {\n    axios.post('/api/label/comment', {\n      owner: 'giladt', // props.label.repo_id.owner, \n      repo: 'getHired', // props.label.repo_id.repo, \n      issue_number: 5, // props.label.issue_number, \n      body: message\n    }).then(res => {\n      console.log('message sent successfully', { res });\n      setOpen(false);\n    }).catch(err => {\n      console.log('message failed to send', { err });\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value)\n  }\n\n  return (\n    \n    <div className=\"buttons\">\n      <IconButton\n        onClick={ () => props.handleCardLeftScreen(props.label._id) }\n        className=\"buttons_close\">\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n\n\n      <IconButton className=\"buttons_github\" \n        onClick={() => window.open(props.label.repo.html_url)}>\n        <GitHubIcon fontSize=\"large\" />\n      </IconButton>\n\n\n      <IconButton className=\"buttons_pull\">\n        <img src={ Logo } alt=\"PullReqLogo\" width=\"40rem\" onClick={ handleClickOpen } />\n      </IconButton>\n      <SendMessageDialog\n        handleClose={ handleClose }\n        handleMessageSend={ handleMessageSend }\n        message={ message }\n        label={ props.label }\n        handleMessageChange={ handleMessageChange }\n        open={ open }\n      />\n      \n      \n\n    </div>\n  );\n};\n\nexport default SwiptButtons\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport \"./Chat.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Chat({ id, name, profilePic, updateToField }) {\n  return (\n    <Link to={ `/chat/${id}` } onClick={ () => updateToField(id) }>\n      <div className=\"chat\">\n        <Avatar className=\"chat_image\" src={profilePic} />\n        <div className=\"details\">\n          <strong>{ name }</strong>\n        </div>\n      </div>\n    </Link>\n\n  );\n}\n\nexport default Chat;\n","import React from \"react\";\nimport Chat from \"./Chat\";\nimport axios from 'axios';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={ value !== index }\n      id={ `full-width-tabpanel-${index}` }\n      aria-labelledby={ `full-width-tab-${index}` }\n      { ...other }\n    >\n      {value === index && (\n        <Box p={ 2 }>\n          <Typography>{ children }</Typography>\n        </Box>\n      ) }\n    </div>\n  );\n}\n\nclass Chats extends React.Component {\n\n  state = {\n    matchedContacts: [],\n    allContacts: [],\n    value: 0,\n  }\n\n  handleChange = (event, newValue) => {\n    this.setState({ value: newValue });\n  };\n\n  handleChangeIndex = (index) => {\n    this.setState({ value: index });\n  };\n\n  a11yProps(index) {\n    return {\n      id: `full-width-tab-${index}`,\n      'aria-controls': `full-width-tabpanel-${index}`,\n    };\n  }\n\n  componentDidMount() {\n    this.props.setBackButton({ path: '/', icon: 'back', click: '' });\n\n    axios.get(`/api/chat/users/${this.props.user._id}`)\n      .then(response => {\n        this.setState({\n          matchedContacts: response.data.filter(user => user._id !== this.props.user._id)\n        });\n      });\n\n    axios.get(`/api/chat/users`)\n      .then(response => {\n        this.setState({\n          allContacts: response.data.filter(user => user._id !== this.props.user._id)\n        });\n      });\n\n  }\n\n  render() {\n    return (\n      <>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={ this.state.value }\n            onChange={ this.handleChange }\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"full width tabs example\"\n          >\n            <Tab label=\"Matched\" { ...this.a11yProps(0) } />\n            <Tab label=\"Party\" { ...this.a11yProps(1) } />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          index={ this.state.value }\n          className=\"chats-list\"\n          onChangeIndex={ this.handleChangeIndex }>\n          <TabPanel value={ this.state.value } index={ 0 }>\n            <span>Your matches:</span>\n            { this.state.matchedContacts.map(contact => (\n              <Chat\n                key={ contact._id }\n                className=\"chats\"\n                updateToField={ this.props.updateToField }\n                name={ contact.displayName || contact.login }\n                id={ contact._id }\n                message=''\n                timestamp=''\n                profilePic={ contact.avatar_url }\n              />\n            )) }\n          </TabPanel>\n          <TabPanel value={ this.state.value } index={ 1 }>\n            <span>All users:</span>\n            { this.state.allContacts.map(contact => (\n              <Chat\n                key={ contact._id }\n                className=\"chats\"\n                updateToField={ this.props.updateToField }\n                name={ contact.displayName || contact.login }\n                id={ contact._id }\n                message=''\n                timestamp=''\n                profilePic={ contact.avatar_url }\n              />\n            )) }\n          </TabPanel>\n        </SwipeableViews>\n      </>\n    )\n  };\n}\n\nexport default Chats;\n","import React from \"react\";\nimport \"./ChatScreen.css\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport MessagePost from './MessagePost';\nimport ChatForm from './ChatForm';\nimport axios from 'axios'\nimport socketIOClient from \"socket.io-client\";\n\nlet socket;\n\nclass ChatScreen extends React.Component {\n  state = {\n    by: this.props.user._id,\n    to: this.props.to,\n    messageHistory: [],\n    message: \"\",\n    response: \"\", // socket io response\n    endpoint: `${process.env.REACT_APP_API_SERVER_URL}`, // socket io connection\n    actionFeedback: \"\",\n    actionFeedbackMsg: \"\",\n    systemFeedback: \"\"\n  }\n\n  componentDidMount = () => {\n    const to = this.props.location.pathname.split('/').pop();\n    if (!this.state.to) this.setState({ to });\n\n    this.props.setBackButton({ path: '/chat', icon: 'back', click: '' })\n    axios.get(`/api/chat/messages/${this.state.by}/${this.state.to || to}`).then(response => {\n      this.setState({\n        messageHistory: response.data\n      })\n      this.scrollDown();\n    }).catch(err => console.log(err))\n\n    // ### Socket Client ####\n\n    const { endpoint } = this.state;\n    socket = socketIOClient(endpoint);\n\n    socket.on(\"message\", data => {\n      const { type, message } = data\n      if (type === 'message') {\n        this.setState({ response: message })\n        axios.get(`/api/chat/messages/${this.state.by}/${this.state.to}`).then(response => {\n          if (response) this.setState({ messageHistory: response.data })\n          this.scrollDown();\n        })\n      } else if (type === 'typing') {\n        this.setState({ actionFeedback: message });\n      } else if (type === 'system') {\n        this.setState({ systemFeedback: message });\n        this.props.isConnected(message)\n      }\n    });\n\n    socket.send({ type: 'system', message: `${this.state.by} is connected.` })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.actionFeedback !== this.state.actionFeedback) {\n      const to = this.props.location.pathname.split('/').pop();\n      const { actionFeedback } = this.state;\n      if (actionFeedback !== null && actionFeedback.to.toString() === to.toString()) {\n        this.setState({ actionFeedbackMsg: actionFeedback.typing });\n      }\n    }\n  }\n\n  scrollDown = () => {\n    document.querySelector('.chat-area>div').scrollBy(0, 10000);\n  }\n\n\n  isTyping = (typing, to) => {\n    socket.send({ type: 'typing', message: { typing, to } })\n  }\n\n  postMessage = message => {\n\n    axios.post('/api/chat/messages', {\n      to: this.state.to,\n      by: this.state.by,\n      message: message\n    }).then(() => {\n      socket.send({ type: 'message', message });\n      socket.send({ type: 'typing', message: null });\n    }).catch(err => console.log(err))\n    this.setState({\n      message: \"\"\n    })\n  }\n  render() {\n    if (!this.props.user) return (<Redirect to='/' />)\n\n    const messageHistory = this.state.messageHistory.map(x => {\n      return (\n        <li key={ x._id }>\n          <MessagePost user={ this.props.user._id } by={ x.by } to={ x.to } content={ x } time={ x.created_at } />\n        </li>)\n    })\n\n    const { actionFeedbackMsg } = this.state;\n    const { systemFeedback } = this.state;\n    systemFeedback.length && setTimeout(() => {\n      this.setState({ systemFeedback: \"\" })\n    }, 2000)\n\n    return (\n      <div className=\"chat-area\">\n        <div>\n          { messageHistory }\n        </div>\n        <div>\n          { actionFeedbackMsg }\n          { systemFeedback }\n        </div>\n        <ChatForm\n          postMessage={ this.postMessage }\n          user={ this.props.user }\n          isConnected={ this.props.isConnected }\n          to={ this.state.by }\n          isTyping={ this.isTyping } />\n      </div>\n    )\n  }\n\n}\nexport default withRouter(ChatScreen);","import React, { Component } from 'react'\nimport \"./Chat.css\";\nimport \"./ChatScreen.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { formatRelative, subDays } from 'date-fns'\n\nexport default class MessagePost extends Component {\n  state = {\n    user: this.props.user,\n    content: this.props.content.content,\n    by: this.props.by,\n    time: this.props.time\n  }\n\n  render() {\n    let style = ''\n    this.state.by._id === this.state.user ?\n      style = 'chat_textUser' :\n      style = 'chat_text'\n\n    return (\n      <div className={ style }>\n        { this.state.by._id !== this.state.user && (\n          <Avatar src={ this.state.by.avatar_url } />) }\n        <div>\n          <div>{ this.state.content }</div>\n          <div>{\n            formatRelative(subDays(Date.parse(this.state.time), 0), new Date())\n          }</div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Redirect } from \"react-router-dom\";\nimport \"./ChatScreen.css\";\n\nexport default class ChatForm extends Component {\n  state = {\n    user: this.props.user,\n    message: \"\",\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target\n    let typing = value.length ?\n      `${this.state.user.displayName ||\n      this.state.user.username} is typing...` :\n      null\n    this.setState({ [name]: value })\n    this.props.isTyping(typing, this.props.to)\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.postMessage(this.state.message)\n    this.setState({\n      message: \"\"\n    })\n  }\n\n  render() {\n    if (!this.props.user) return (<Redirect to='/' />)\n\n    return (\n      <form className=\"chat_input\" onSubmit={ this.handleSubmit }>\n        <input autoComplete=\"off\"\n          className=\"message_input\"\n          type=\"text\" name=\"message\"\n          placeholder=\"Type your message here...\"\n          value={ this.state.message }\n          onChange={ this.handleChange } />\n        <button className=\"inputBtn\">Send</button>\n      </form>\n    )\n  }\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nexport default function FormDialog(props) {\n  const url = (!props.user) ?\n    `${process.env.REACT_APP_API_SERVER_URL}/api/auth/github` :\n    `${process.env.REACT_APP_API_SERVER_URL}/api/auth/user/${props.user}`;\n\n  return (\n    <Button\n      id='root-login-button'\n      href={ url }\n      variant=\"outlined\"\n      color=\"primary\"\n      className=\"buttons\">\n      <GitHubIcon style={{marginRight: '1rem'}}/>\n      Login / Signup with github\n    </Button>\n  );\n}","\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Signup from './Signup';\n\nclass Login extends Component {\n  render() {\n    console.log(this.props.match.params);\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"sm\" style={ { margin: '2rem', padding: '2rem' } }>\n          <Typography component=\"article\">\n            <h1>Sign up or login</h1>\n            <p>Sign up and login to Pull-Req app in order to chat with ____ regarding a solution for your issue or just get to know a new friend.</p>\n            <Signup user={ this.props.match.params.person } />\n          </Typography>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport clsx from 'clsx';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./Navbar.css\";\n\nimport { logout } from '../../services/auth';\n\nconst useStyles = makeStyles({\n  list: {\n    maxWidth: 350,\n    width: \"75vw\"\n  },\n  fullList: {\n    width: 'auto',\n  },\n  link: {\n    display: 'contents'\n  }\n});\n\nexport default function SideMenu(props) {\n  const classes = useStyles();\n\n  const handleLogoutGithub = e => {\n    e.preventDefault();\n    if(props.user){\n      logout();\n      props.setUser(null);\n      props.closeMenu();\n    };\n  }\n\n  let container = document.querySelector(\"#root\");\n\n  return (\n    <React.Fragment key='left'>\n      <Drawer \n        PaperProps={{ style: { position: 'absolute' } }}\n        BackdropProps={{ style: { position: 'absolute' } }}\n        ModalProps={{\n          container,\n          style: { position: 'absolute' }\n        }}\n        variant=\"temporary\"\n        container={container}\n        anchor='left'\n        open={props.menuIsOpen} \n        onClose={props.closeMenu}\n      >\n        <List className={clsx(classes.list)}>\n          <ListItem button divider disabled>\n            <ListItemIcon><SettingsIcon /></ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n            <ListItemSecondaryAction onClick={props.closeMenu}>\n              <IconButton edge=\"end\" aria-label=\"delete\">\n                <CloseIcon/>\n              </IconButton>              \n            </ListItemSecondaryAction>\n          </ListItem>\n          <hr/>\n          <ListItem button>\n            <ListItemIcon><EditIcon /></ListItemIcon>\n            <ListItemText primary=\"Edit Profile\" />\n          </ListItem>\n          {props.user ? (\n            <ListItem button onClick={handleLogoutGithub}>\n              <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n              <ListItemText primary=\"Log out\" />\n            </ListItem>\n          ):(\n          <ListItem button>\n                <a className={ clsx(classes.link) } href={ `${process.env.REACT_APP_API_SERVER_URL}/api/auth/github` }>\n            <ListItemIcon><GitHubIcon/></ListItemIcon>\n            <ListItemText primary=\"Login / Sign up\" />\n            </a>\n          </ListItem>\n          )}\n        </List>\n      </Drawer>\n    </React.Fragment>\n  );\n}","import axios from 'axios';\n\nconst signup = (username, password) => {\n  return axios\n    .post('/api/auth/signup', { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst loginGitHub = () => {\n  var xhttp = new XMLHttpRequest();\n  xhttp.open(\"GET\", `${process.env.API_SERVER_URL}/api/auth/github`, true);\n  xhttp.send();\n};\n\nconst login = (username, password) => {\n  return axios\n    .post('/api/auth/login', { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  return axios\n    .delete('/api/auth/logout')\n    .then(response => response)\n    .catch(err => err);\n};\n\nexport { signup, loginGitHub, login, logout };","import React, { Component } from 'react'\nimport Navbar from \"./components/navigation/Navbar\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport TinderCards from \"./components/TinderCards\"\nimport SwipeButtons from \"./components/navigation/buttons/SwipeButtons\";\nimport Chats from \"./components/chat/Chats\";\nimport ChatScreen from \"./components/chat/ChatScreen\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport SideMenu from \"./components/navigation/Menu\";\nimport axios from 'axios';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {\n    user: this.props.user,\n    to: '',\n    connectedUsers: [],\n    backButton: { path: '/', icon: 'menu', click: '' },\n    menuIsOpen: false,\n    // cards logic:\n    labels: [],\n    page: 1,\n    \n  }\n\n  handleCardLeftScreen = (id) => {\n    const currentLabel = this.state.labels.find(label => label._id === id);\n    const newLabels = this.state.labels.filter(label => label._id !== id);\n    this.setState({ labels: newLabels });\n    this.setState({ currentLabel });\n  }\n\n  loadNextPage = () => {\n    const q = 'help-wanted&is:public'\n    axios.get(`/api/labels/${q}/2/${this.state.page}`)\n      .then(response => {\n        const labels = [...response.data.data, ...this.state.labels];\n        this.setState({ labels, page: this.state.page + 1 });\n      })\n      .catch(err => this.setState({ message: `Error fetching labels. \\n ${err}` }));\n  }\n\n  setUser = user => {\n    this.setState({ user });\n  }\n\n  updateTo = user => {\n    this.setState({ partner: user })\n  }\n\n  isConnected = user => {\n    const name = user.split(\" \")[0]\n    this.setState({ connectedUsers: this.state.connectedUsers.concat(name) })\n  }\n\n  setBackButton = (info) => {\n    const { path, icon, click } = info;\n    const backButton = {\n      path: path || '',\n      icon: icon || 'menu',\n      click: click || ''\n    }\n    this.setState({ backButton });\n  }\n\n  handleMenuIsOpen = () => {\n    this.setState(prevState => ({ menuIsOpen: !prevState.menuIsOpen }))\n  }\n\n  handleCloseMenu = () => {\n    this.setState(prevState => ({ menuIsOpen: false }))\n  }\n\n  updateToField = (id) => {\n    this.setState({ to: id })\n  }\n\n  render() {\n    return (\n      <Router className=\"App\">\n        <Navbar\n          user={ this.state.user }\n          setUser={ this.setUser }\n          backButton={ this.state.backButton }\n          menuIsOpen={ this.state.menuIsOpen }\n          setMenuIsOpen={ this.handleMenuIsOpen }\n          closeMenu={ this.handleCloseMenu } />\n        <SideMenu\n          user={ this.state.user }\n          setUser={ this.setUser }\n          menuIsOpen={ this.state.menuIsOpen }\n          closeMenu={ this.handleCloseMenu }\n        />\n        <Switch>\n          <Route exact path=\"/chat/:person\">\n            { this.state.user ? (\n              <ChatScreen\n                user={ this.state.user }\n                to={ this.state.to }\n                isConnected={ this.isConnected }\n                setBackButton={ this.setBackButton } />) :\n              (\n                <Login />\n              ) }\n          </Route>\n          <Route exact path=\"/chat\">\n            { this.state.user ? (\n              <Chats\n                user={ this.state.user }\n                updateToField={ this.updateToField }\n                connectedUsers={ this.state.connectedUsers }\n                setBackButton={ this.setBackButton } />) :\n              (<Redirect to='/login' />)\n            }\n          </Route>\n          <Route exact path='login'>\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <TinderCards\n              user={ this.state.user }\n              loadNextPage={ this.loadNextPage }\n              labels={ this.state.labels }\n              page={ this.state.page }\n              handleCardLeftScreen={ this.handleCardLeftScreen }\n              setBackButton={ this.setBackButton }\n            />\n            { this.state.user ?\n              (<SwipeButtons\n                label={ this.state.labels[this.state.labels.length - 1] }\n                handleCardLeftScreen={ this.handleCardLeftScreen }\n              />) :\n              (<Signup user={ this.state.user } />)\n            }\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios';\n\n\naxios.get('/api/auth/loggedin')\n  .then(response => {\n    const user = response.data;\n    ReactDOM.render(\n      <BrowserRouter>\n        <App user={user} />\n      </BrowserRouter>,\n      document.getElementById('root')\n    );\n  });\n"],"sourceRoot":""}